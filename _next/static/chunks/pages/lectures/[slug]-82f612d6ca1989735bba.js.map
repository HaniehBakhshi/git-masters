{"version":3,"file":"static/chunks/pages/lectures/[slug]-82f612d6ca1989735bba.js","mappings":"sPAwBMA,EAAiBC,EAAAA,GAAAA,KAAAA,WAAH,gEAAGA,CAAH,2I,KAkLpB,UAjKgD,SAAC,GAI3C,MAHJC,EAGI,EAHJA,QAIMC,GADF,EAFJC,aAEI,EADJC,SAEeC,EAAAA,EAAAA,cAEf,IAAKH,EAAOI,aAAc,OAACL,QAAD,IAACA,IAAAA,EAASM,MAClC,OAAO,SAAC,UAAD,CAAWC,WAAY,MAGhC,IAAMC,EAAe,CACnBC,IAAK,GAAF,OAAKC,EAAAA,QAAL,OAAcT,EAAOU,SAArB,YAAiCX,EAAQM,MAC5CM,WAAYZ,EAAQM,KACpBO,MAAOb,EAAQa,OAGjB,OACE,SAAC,KAAD,UACGZ,EAAOI,YACN,2CAEA,+BACE,qBAASS,UAAU,QAAnB,WACE,UAAC,UAAD,YACE,6BACGd,EAAQa,MADX,MACqBE,EAAAA,OAErB,iBACEC,SAAS,WACTC,QACEjB,EAAQkB,SACRlB,EAAQmB,YADR,UAEGlB,EAAOU,SAFV,gCAMN,oBAASG,UAAU,0BAAnB,UACE,gBAAKA,UAAU,6CAAf,UACE,iBAAKA,UAAU,mBAAf,WACE,gBAAKA,UAAU,kCAAf,UAEE,SAAC,KAAD,CACEM,IAAI,UACJN,UAAU,2CACVO,IACErB,EAAQmB,YAAR,UACGlB,EAAOU,SADV,+BAKN,iBAAKG,UAAU,kCAAf,WACE,iBAAKA,UAAU,uCAAf,WACE,gBAAKA,UAAU,2FAAf,SACGd,EAAQsB,QAA6B,gBAAnBtB,EAAQsB,QACzB,iBACEC,KAAK,OACLC,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbb,UAAU,YACVc,QAAQ,YAPV,WASE,iBAAMC,EAAE,6CACR,mBAAQC,GAAI,GAAIC,GAAI,EAAGC,EAAG,QAG5B,gBACEZ,IAAI,cACJN,UAAU,8EACVO,IAAG,0CAIT,iBAAKP,UAAU,wDAAf,WACE,cAAGA,UAAU,YAAb,SACGd,EAAQsB,QAAU,iBAErB,gBAAKR,UAAU,2CACf,eAAIA,UAAU,oDAAd,SACGd,EAAQa,eAIf,iBAAKC,UAAU,yHAAf,WACE,gBAAKA,UAAU,+BAAf,UACE,SAAChB,EAAD,CACEgB,UAAU,gBACVmB,wBAAyB,CAAEC,OAAQlC,EAAQiB,cAG/C,iBAAKH,UAAU,wCAAf,WACE,oCADF,UAEGd,EAAQmC,YAFX,aAEG,EAAcC,KAAI,SAACC,GAAD,OACjB,iBAEEvB,UAAU,sHAFZ,SAIGuB,GAHIA,UAOX,SAAC,KAAD,CACEC,UAAW,mBACXC,OAAQ/B,0B,sBCjJ3BgC,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,mBACA,WACE,OAAO,EAAQ,W","sources":["webpack://_N_E/./pages/lectures/[slug].tsx","webpack://_N_E/?43d6"],"sourcesContent":["import { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Head from \"next/head\";\nimport { Layout } from \"@components\";\nimport markdownToHtml from \"@lib/markdownToHtml\";\nimport { Image } from \"@components\";\nimport {\n  getAllLectures,\n  getItemBySlug,\n  Lecture,\n  lecturesDirectory,\n} from \"@lib/api\";\nimport { SITE_NAME } from \"@lib/constants\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { DiscussionEmbed } from \"disqus-react\";\nimport { domain } from \"../../envs\";\n\ninterface LecturePageProps {\n  lecture: Lecture;\n  moreLectures: any;\n  preview: any;\n}\n\nconst GitHubMarkdown = styled.main`\n  a {\n    color: red;\n    border-radius: 10px;\n    padding: 0px 4px;\n    text-decoration: underline;\n  }\n\n  a:hover {\n    background: #f1dada;\n  }\n\n  ol li {\n    list-style-type: decimal;\n  }\n`;\n\nconst LecturePage: React.FC<LecturePageProps> = ({\n  lecture,\n  moreLectures,\n  preview,\n}) => {\n  const router = useRouter();\n\n  if (!router.isFallback && !lecture?.slug) {\n    return <ErrorPage statusCode={404} />;\n  }\n\n  const disqusConfig = {\n    url: `${domain}${router.basePath}/${lecture.slug}`,\n    identifier: lecture.slug,\n    title: lecture.title,\n  };\n\n  return (\n    <Layout>\n      {router.isFallback ? (\n        <h3>Loadingâ€¦</h3>\n      ) : (\n        <>\n          <article className=\"mb-32\">\n            <Head>\n              <title>\n                {lecture.title} | {SITE_NAME}\n              </title>\n              <meta\n                property=\"og:image\"\n                content={\n                  lecture.ogImage ||\n                  lecture.coverImage ||\n                  `${router.basePath}/images/git-cover.jpeg`\n                }\n              />\n            </Head>\n            <section className=\"text-gray-600 body-font\">\n              <div className=\"container px-5 py-24 mx-auto flex flex-col\">\n                <div className=\"lg:w-4/6 mx-auto\">\n                  <div className=\"rounded-lg h-64 overflow-hidden\">\n                    {/*1200*500 image*/}\n                    <Image\n                      alt=\"content\"\n                      className=\"object-cover object-center h-full w-full\"\n                      src={\n                        lecture.coverImage ||\n                        `${router.basePath}/images/git-cover.jpeg`\n                      }\n                    />\n                  </div>\n                  <div className=\"flex flex-col sm:flex-row mt-10\">\n                    <div className=\"sm:w-1/3 text-center sm:pr-8 sm:py-8\">\n                      <div className=\"w-20 h-20 rounded-full inline-flex items-center justify-center bg-gray-200 text-gray-400\">\n                        {lecture.author && lecture.author !== \"Ali Heydari\" ? (\n                          <svg\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            className=\"w-10 h-10\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path d=\"M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2\" />\n                            <circle cx={12} cy={7} r={4} />\n                          </svg>\n                        ) : (\n                          <img\n                            alt=\"Ali Heydari\"\n                            className=\"w-16 h-16 bg-gray-100 object-cover object-center flex-shrink-0 rounded-full\"\n                            src={`https://github.com/ali4heydari.png`}\n                          />\n                        )}\n                      </div>\n                      <div className=\"flex flex-col items-center text-center justify-center\">\n                        <p className=\"text-base\">\n                          {lecture.author || \"Ali Heydari\"}\n                        </p>\n                        <div className=\"w-12 h-1 bg-red-500 rounded mt-2 mb-4\" />\n                        <h2 className=\"font-medium title-font mt-4 text-gray-900 text-lg\">\n                          {lecture.title}\n                        </h2>\n                      </div>\n                    </div>\n                    <div className=\"sm:w-2/3 sm:pl-8 sm:py-8 sm:border-l border-gray-200 sm:border-t-0 border-t mt-4 pt-4 sm:mt-0 text-center sm:text-left\">\n                      <div className=\"leading-relaxed text-lg mb-4\">\n                        <GitHubMarkdown\n                          className=\"markdown-body\"\n                          dangerouslySetInnerHTML={{ __html: lecture.content }}\n                        />\n                      </div>\n                      <div className=\"mt-20 pt-2 border-t-2 border-gray-200\">\n                        <span>Tags:</span>\n                        {lecture.tags?.map((tag) => (\n                          <span\n                            key={tag}\n                            className=\"ml-1 text-xs inline-flex items-center font-bold leading-sm uppercase px-3 py-1 bg-red-200 text-red-700 rounded-full\"\n                          >\n                            {tag}\n                          </span>\n                        ))}\n                      </div>\n                      <DiscussionEmbed\n                        shortname={\"ali4heydari-tech\"}\n                        config={disqusConfig}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </article>\n        </>\n      )}\n    </Layout>\n  );\n};\n\nexport async function getStaticProps({ params }: any) {\n  const lecture = getItemBySlug<Lecture>(\n    params.slug,\n    [\n      \"title\",\n      \"releaseDate\",\n      \"slug\",\n      \"author\",\n      \"content\",\n      \"ogImage\",\n      \"coverImage\",\n      \"tags\",\n    ],\n    lecturesDirectory\n  );\n  const content = await markdownToHtml(lecture.content || \"\");\n\n  return {\n    props: {\n      lecture: {\n        ...lecture,\n        content,\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const lectures = getAllLectures([\"slug\"]);\n\n  return {\n    paths: lectures.map((lecture) => {\n      return {\n        params: {\n          slug: lecture.slug,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n\nexport default LecturePage;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/lectures/[slug]\",\n      function () {\n        return require(\"private-next-pages/lectures/[slug].tsx\");\n      }\n    ]);\n  "],"names":["GitHubMarkdown","styled","lecture","router","moreLectures","preview","useRouter","isFallback","slug","statusCode","disqusConfig","url","domain","basePath","identifier","title","className","SITE_NAME","property","content","ogImage","coverImage","alt","src","author","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","cx","cy","r","dangerouslySetInnerHTML","__html","tags","map","tag","shortname","config","window","__NEXT_P","push"],"sourceRoot":""}